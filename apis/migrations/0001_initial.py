# Generated by Django 4.2.5 on 2023-09-24 14:57

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('city_id', models.AutoField(primary_key=True, serialize=False)),
                ('city_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='Vendors',
            fields=[
                ('vendor_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('contact_email', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('products_or_services', models.TextField(blank=True, default=None, null=True)),
                ('address', models.TextField(blank=True, default=None, null=True)),
                ('website', models.URLField(blank=True, default=None, null=True)),
                ('phone_number', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('availability', models.BooleanField(default=False)),
                ('insurance_coverage', models.TextField(blank=True, default=None, null=True)),
                ('licenses_and_permits', models.TextField(blank=True, default=None, null=True)),
                ('preferred_venues', models.TextField(blank=True, default=None, null=True)),
                ('facebook_url', models.URLField(blank=True, default=None, max_length=255, null=True)),
                ('instagram_url', models.URLField(blank=True, default=None, max_length=255, null=True)),
                ('twitter_url', models.URLField(blank=True, default=None, max_length=255, null=True)),
                ('linkedin_url', models.URLField(blank=True, default=None, max_length=255, null=True)),
                ('youtube_url', models.URLField(blank=True, default=None, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apis.cities')),
            ],
            options={
                'db_table': 'vendors',
            },
        ),
        migrations.CreateModel(
            name='VendorTypes',
            fields=[
                ('vendor_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'vendor_types',
            },
        ),
        migrations.CreateModel(
            name='Venues',
            fields=[
                ('venue_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('address', models.TextField(blank=True, default=None, null=True)),
                ('email', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('owner_manager_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('owner_manager_email', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('owner_manager_phone', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('year_of_establishment', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('ownership_type', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'venues',
            },
        ),
        migrations.CreateModel(
            name='VenueTypes',
            fields=[
                ('venue_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('venue_type', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'venue_types',
            },
        ),
        migrations.CreateModel(
            name='VenueSocialMediaHandles',
            fields=[
                ('social_media_handle_id', models.AutoField(primary_key=True, serialize=False)),
                ('facebook_url', models.URLField(blank=True, default=None, max_length=255, null=True)),
                ('instagram_url', models.URLField(blank=True, default=None, max_length=255, null=True)),
                ('twitter_url', models.URLField(blank=True, default=None, max_length=255, null=True)),
                ('linkedin_url', models.URLField(blank=True, default=None, max_length=255, null=True)),
                ('youtube_url', models.URLField(blank=True, default=None, max_length=255, null=True)),
                ('venue', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='apis.venues')),
            ],
            options={
                'db_table': 'venue_s_m_handles',
            },
        ),
        migrations.CreateModel(
            name='VenueServices',
            fields=[
                ('venue_services_id', models.AutoField(primary_key=True, serialize=False)),
                ('catering_services', models.BooleanField(blank=True, default=None, null=True)),
                ('types_of_cuisine', models.TextField(blank=True, default=None, null=True)),
                ('bar_services', models.BooleanField(blank=True, default=None, null=True)),
                ('alcohol_licensing', models.BooleanField(blank=True, default=None, null=True)),
                ('decor_services', models.BooleanField(blank=True, default=None, null=True)),
                ('event_planning_services', models.BooleanField(blank=True, default=None, null=True)),
                ('audio_visual_services', models.BooleanField(blank=True, default=None, null=True)),
                ('internet_wifi_availability', models.BooleanField(blank=True, default=None, null=True)),
                ('accommodation_availability', models.BooleanField(blank=True, default=None, null=True)),
                ('number_of_rooms_for_accommodation', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('types_of_rooms', models.TextField(blank=True, default=None, null=True)),
                ('furniture_availability', models.BooleanField(blank=True, default=None, null=True)),
                ('types_of_furniture_available', models.TextField(blank=True, default=None, null=True)),
                ('decor_restrictions', models.TextField(blank=True, default=None, null=True)),
                ('cleaning_services', models.BooleanField(blank=True, default=None, null=True)),
                ('on_site_staff_availability', models.BooleanField(blank=True, default=None, null=True)),
                ('event_coordination_services', models.BooleanField(blank=True, default=None, null=True)),
                ('equipment_rental_options', models.BooleanField(blank=True, default=None, null=True)),
                ('storage_facilities', models.BooleanField(blank=True, default=None, null=True)),
                ('signage_banner_allowed', models.BooleanField(blank=True, default=None, null=True)),
                ('special_lighting', models.BooleanField(blank=True, default=None, null=True)),
                ('dance_floor', models.BooleanField(blank=True, default=None, null=True)),
                ('outdoor_heating', models.BooleanField(blank=True, default=None, null=True)),
                ('tenting_facilities', models.BooleanField(blank=True, default=None, null=True)),
                ('coat_check', models.BooleanField(blank=True, default=None, null=True)),
                ('bridal_suite', models.BooleanField(blank=True, default=None, null=True)),
                ('child_care_facilities', models.BooleanField(blank=True, default=None, null=True)),
                ('pet_care_facilities', models.BooleanField(blank=True, default=None, null=True)),
                ('venue', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='apis.venues')),
            ],
            options={
                'db_table': 'services',
            },
        ),
        migrations.AddField(
            model_name='venues',
            name='venue_type',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='apis.venuetypes'),
        ),
        migrations.CreateModel(
            name='VenuePreferredVendors',
            fields=[
                ('venue_preferred_vendors_id', models.AutoField(primary_key=True, serialize=False)),
                ('preferred_band_vendor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='band_preferences', to='apis.vendors')),
                ('preferred_catering_vendor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='catering_preferences', to='apis.vendors')),
                ('preferred_dj_vendor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dj_preferences', to='apis.vendors')),
                ('preferred_flowers_vendor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flowers_preferences', to='apis.vendors')),
                ('preferred_lighting_and_decor_vendor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lighting_decor_preferences', to='apis.vendors')),
                ('preferred_photography_vendor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photography_preferences', to='apis.vendors')),
                ('preferred_transportation_vendor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transportation_preferences', to='apis.vendors')),
                ('preferred_wedding_cake_vendor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wedding_cake_preferences', to='apis.vendors')),
                ('venue', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='preferred_vendors', to='apis.venues')),
            ],
            options={
                'db_table': 'venue_vendors',
            },
        ),
        migrations.CreateModel(
            name='VenueMedia',
            fields=[
                ('venue_photo_id', models.AutoField(primary_key=True, serialize=False)),
                ('media', models.FileField(upload_to='venue_media/')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.venues')),
            ],
            options={
                'db_table': 'venue_media',
            },
        ),
        migrations.CreateModel(
            name='VenueLegalCompliances',
            fields=[
                ('venue_legal_compliance_id', models.AutoField(primary_key=True, serialize=False)),
                ('licenses_and_permits', models.TextField(blank=True, default=None, null=True)),
                ('safety_measures', models.TextField(blank=True, default=None, null=True)),
                ('business_registration_details', models.TextField(blank=True, default=None, null=True)),
                ('tax_compliance_status', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('health_and_safety_certifications', models.TextField(blank=True, default=None, null=True)),
                ('fire_safety_compliance', models.TextField(blank=True, default=None, null=True)),
                ('food_safety_certifications', models.TextField(blank=True, default=None, null=True)),
                ('alcohol_licensing_details', models.TextField(blank=True, default=None, null=True)),
                ('music_licensing_details', models.TextField(blank=True, default=None, null=True)),
                ('insurance_coverage_details', models.TextField(blank=True, default=None, null=True)),
                ('accessibility_compliance', models.TextField(blank=True, default=None, null=True)),
                ('privacy_policy', models.TextField(blank=True, default=None, null=True)),
                ('terms_and_conditions', models.TextField(blank=True, default=None, null=True)),
                ('dispute_resolution_mechanisms', models.TextField(blank=True, default=None, null=True)),
                ('sustainability_practices', models.TextField(blank=True, default=None, null=True)),
                ('noise_pollution_controls', models.TextField(blank=True, default=None, null=True)),
                ('venue', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='apis.venues')),
            ],
            options={
                'db_table': 'legal_compliances',
            },
        ),
        migrations.CreateModel(
            name='VenueFacilities',
            fields=[
                ('venue_facilities_id', models.AutoField(primary_key=True, serialize=False)),
                ('total_area', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('indoor_area', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('outdoor_area', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('seating_capacity', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('standing_capacity', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('number_of_rooms_spaces', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('stage_availability', models.BooleanField(blank=True, default=None, null=True)),
                ('podium_availability', models.BooleanField(blank=True, default=None, null=True)),
                ('parking_facilities', models.BooleanField(blank=True, default=None, null=True)),
                ('parking_capacity', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('valet_parking_availability', models.BooleanField(blank=True, default=None, null=True)),
                ('proximity_to_public_transport', models.TextField(blank=True, default=None, null=True)),
                ('proximity_to_major_roads', models.TextField(blank=True, default=None, null=True)),
                ('proximity_to_airport', models.TextField(blank=True, default=None, null=True)),
                ('surrounding_environment', models.TextField(blank=True, default=None, null=True)),
                ('noise_restrictions', models.TextField(blank=True, default=None, null=True)),
                ('ceiling_height', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('load_in_load_out_facilities', models.BooleanField(blank=True, default=None, null=True)),
                ('green_room_availability', models.BooleanField(blank=True, default=None, null=True)),
                ('dressing_room_availability', models.BooleanField(blank=True, default=None, null=True)),
                ('kitchen_facilities', models.BooleanField(blank=True, default=None, null=True)),
                ('restroom_facilities', models.BooleanField(blank=True, default=None, null=True)),
                ('power_supply_backup', models.BooleanField(blank=True, default=None, null=True)),
                ('air_conditioning_heating', models.BooleanField(blank=True, default=None, null=True)),
                ('natural_light_availability', models.BooleanField(blank=True, default=None, null=True)),
                ('outdoor_space_description', models.TextField(blank=True, default=None, null=True)),
                ('scenic_view', models.BooleanField(blank=True, default=None, null=True)),
                ('smoking_area', models.BooleanField(blank=True, default=None, null=True)),
                ('pet_friendly', models.BooleanField(blank=True, default=None, null=True)),
                ('child_friendly', models.BooleanField(blank=True, default=None, null=True)),
                ('noise_level', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('nearby_parking_facilities', models.TextField(blank=True, default=None, null=True)),
                ('security_features', models.TextField(blank=True, default=None, null=True)),
                ('fire_safety_measures', models.TextField(blank=True, default=None, null=True)),
                ('venue', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='apis.venues')),
            ],
            options={
                'db_table': 'facilities',
            },
        ),
        migrations.CreateModel(
            name='VenueEvents',
            fields=[
                ('venue_events_id', models.AutoField(primary_key=True, serialize=False)),
                ('types_of_events_hosted', models.TextField(blank=True, default=None, null=True)),
                ('client_testimonials_and_reviews', models.TextField(blank=True, default=None, null=True)),
                ('number_of_events_hosted', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('notable_events_or_clients', models.TextField(blank=True, default=None, null=True)),
                ('client_references', models.TextField(blank=True, default=None, null=True)),
                ('event_success_stories', models.TextField(blank=True, default=None, null=True)),
                ('event_failures_lessons_learned', models.TextField(blank=True, default=None, null=True)),
                ('average_event_rating', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=3, null=True)),
                ('event_portfolio', models.TextField(blank=True, default=None, null=True)),
                ('media_mentions', models.TextField(blank=True, default=None, null=True)),
                ('event_frequency', models.TextField(blank=True, default=None, null=True)),
                ('venue', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='apis.venues')),
            ],
            options={
                'db_table': 'events',
            },
        ),
        migrations.CreateModel(
            name='VenueBookings',
            fields=[
                ('venue_booking_id', models.AutoField(primary_key=True, serialize=False)),
                ('availability', models.BooleanField(blank=True, default=None, null=True)),
                ('minimum_notice_period', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('cancellation_policy', models.TextField(blank=True, default=None, null=True)),
                ('pricing', models.TextField(blank=True, default=None, null=True)),
                ('payment_methods_accepted', models.TextField(blank=True, default=None, null=True)),
                ('insurance_requirements', models.TextField(blank=True, default=None, null=True)),
                ('booking_channels', models.TextField(blank=True, default=None, null=True)),
                ('deposit_requirement', models.BooleanField(blank=True, default=None, null=True)),
                ('deposit_amount', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True)),
                ('deposit_refund_policy', models.TextField(blank=True, default=None, null=True)),
                ('full_payment_due_date', models.TextField(blank=True, default=None, null=True)),
                ('discounts_available', models.BooleanField(blank=True, default=None, null=True)),
                ('types_of_discounts', models.TextField(blank=True, default=None, null=True)),
                ('minimum_booking_duration', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('maximum_booking_duration', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('overtime_policy', models.TextField(blank=True, default=None, null=True)),
                ('setup_takedown_time_included', models.BooleanField(blank=True, default=None, null=True)),
                ('additional_costs', models.TextField(blank=True, default=None, null=True)),
                ('contract_requirement', models.BooleanField(blank=True, default=None, null=True)),
                ('contract_terms', models.TextField(blank=True, default=None, null=True)),
                ('cancellation_by_venue_policy', models.TextField(blank=True, default=None, null=True)),
                ('force_majeure_policy', models.TextField(blank=True, default=None, null=True)),
                ('venue', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='apis.venues')),
            ],
            options={
                'db_table': 'booking_info',
            },
        ),
        migrations.AddField(
            model_name='vendors',
            name='vendor_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apis.vendortypes'),
        ),
        migrations.CreateModel(
            name='VendorMedia',
            fields=[
                ('vendor_photo_id', models.AutoField(primary_key=True, serialize=False)),
                ('media', models.FileField(upload_to='vendor_media/')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.vendors')),
            ],
            options={
                'db_table': 'vendor_media',
            },
        ),
    ]
